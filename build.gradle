// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.41'
    ext.version_name = '1.0.0'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1"
        classpath "com.dicedmelon.gradle:jacoco-android:0.1.4"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply plugin: "org.sonarqube"

//sonar configuration
sonarqube {
    properties {
        property "sonar.projectVersion", project.version_name
        property "sonar.sourceEncoding", "UTF-8"

        //property "sonar.sources", "app/src/main/java"
        //property "sonar.binaries", "app/build/intermediates/app_classes/debug"
        //property "sonar.java.binaries", "app/build/intermediates/app_classes/debug"
        //property "sonar.tests", "app/src/test/java, app/src/androidTest/java"
        //property "sonar.java.test.binaries", "app/build/intermediates/app_classes/debug"

        def unit = fileTree(dir: project.projectDir, includes: ['**/*.exec']).files
        def ui = fileTree(dir: project.projectDir, includes: ['**/*.ec']).files
        unit.addAll(ui)
        def files = unit.join(", ")

        property "sonar.jacoco.reportPaths", files
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPath", "app/build/test-results/testDebugUnitTest"
        property "sonar.android.lint.report", "app/build/reports/lint-results.xml"
    }
}
